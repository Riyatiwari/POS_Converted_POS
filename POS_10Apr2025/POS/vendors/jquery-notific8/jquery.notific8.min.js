!function (t) { var i = { life: 1e4, theme: "teal", sticky: !1, verticalEdge: "right", horizontalEdge: "top", zindex: 1100 }, e = { init: function (a, n) { return this.each(function () { var o = t(this), d = o.data("notific8"); o.data("notific8", { target: o, settings: {}, message: "" }), (d = o.data("notific8")).message = a, t.extend(d.settings, i, n), e._buildNotification(o) }) }, destroy: function (i) { i.data("notific8"), t(window).unbind(".notific8"), i.removeData("notific8") }, _buildNotification: function (i) { var e, a = i.data("notific8"), n = t("<div />"), o = Number(t("body").attr("data-notific8s")); (o++ , n.addClass("jquery-notific8-notification").addClass(a.settings.theme), n.attr("id", "jquery-notific8-notification-" + o), t("body").attr("data-notific8s", o), a.settings.hasOwnProperty("heading") && "string" == typeof a.settings.heading && n.append(t("<div />").addClass("jquery-notific8-heading").html(a.settings.heading)), a.settings.sticky) ? ((e = t("<div />").addClass("jquery-notific8-close-sticky").append(t("<span />").html("close x"))).click(function () { n.animate({ width: "hide" }, { duration: "fast", complete: function () { n.remove() } }) }), n.append(e), n.addClass("sticky")) : ((e = t("<div />").addClass("jquery-notific8-close").append(t("<span />").html("X"))).click(function () { n.animate({ width: "hide" }, { duration: "fast", complete: function () { n.remove() } }) }), n.append(e)); n.append(t("<div />").addClass("jquery-notific8-message").html(a.message)), t(".jquery-notific8-container." + a.settings.verticalEdge + "." + a.settings.horizontalEdge).append(n), n.animate({ width: "show" }, { duration: "fast", complete: function () { var t, i; a.settings.sticky || (t = n, i = a.settings.life, setTimeout(function () { t.animate({ width: "hide" }, { duration: "fast", complete: function () { t.remove() } }) }, i)), a.settings = {} } }) }, configure: function (e) { t.extend(i, e) }, zindex: function (t) { i.zindex = t } }; t.notific8 = function (a, n) { switch (a) { case "configure": case "config": return e.configure.apply(this, [n]); case "zindex": return e.zindex.apply(this, [n]); default: if (void 0 === n && (n = {}), 0 === t(".jquery-notific8-container").size()) { var o = t("body"); o.attr("data-notific8s", 0), o.append(t("<div />").addClass("jquery-notific8-container").addClass("top").addClass("right")), o.append(t("<div />").addClass("jquery-notific8-container").addClass("top").addClass("left")), o.append(t("<div />").addClass("jquery-notific8-container").addClass("bottom").addClass("right")), o.append(t("<div />").addClass("jquery-notific8-container").addClass("bottom").addClass("left")), t(".jquery-notific8-container").css("z-index", i.zindex) } (!n.hasOwnProperty("verticalEdge") || "right" != n.verticalEdge.toLowerCase() && "left" != n.verticalEdge.toLowerCase()) && (n.verticalEdge = i.verticalEdge), (!n.hasOwnProperty("horizontalEdge") || "top" != n.horizontalEdge.toLowerCase() && "bottom" != n.horizontalEdge.toLowerCase()) && (n.horizontalEdge = i.horizontalEdge), n.verticalEdge = n.verticalEdge.toLowerCase(), n.horizontalEdge = n.horizontalEdge.toLowerCase(), t(".jquery-notific8-container." + n.verticalEdge + "." + n.horizontalEdge).notific8(a, n) } }, t.fn.notific8 = function (i) { return "string" == typeof i ? e.init.apply(this, arguments) : void t.error("jQuery.notific8 takes a string message as the first parameter") } }(jQuery);