@page
@model Converted_POS.Pages.forms.Product_ListModel
@{
    ViewData["Title"] = "Product_List";
}
@{ // Group the items by DepartmentName
    var groupedItems = Model.product
        .GroupBy(p => p.GroupName)
        .ToList();

    var groupNames = groupedItems.Select(g => g.Key).ToList();
}
@*<ul>
        @foreach (var groupName in groupNames)
        {
            <li>@groupName</li>
    }
    </ul>*@

@section link {

    <div class="page-header pull-left">
        <ol class="breadcrumb page-breadcrumb pull-left">
            <li>
                <i class="fa fa-home"></i>&nbsp;<a asp-page="/Dashboard">Home</a>&nbsp;&nbsp;
                <i class="fa fa-angle-right"></i>&nbsp;&nbsp;
            </li>
            <li class="active"><a asp-page="/Configuration/Product_List">Product List</a></li>
        </ol>
    </div>

    <link href="~/js/vendor2/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css" />
    <link href="~/css/fonts/nunito.css" rel="stylesheet" />
    <script src="~/js/vendors/googleapis/jquery.min.js"></script>
    <script src="~/js/demo/datatables-demo.js"></script>



    <style>
        /* Table styling */
        .table-responsive {
            overflow: hidden; /* Hide horizontal scrollbar */
            width: 100%; /* Full width */
            margin-bottom: 1rem; /* Space below table */
        }

        .table {
            width: 100%; /* Full width */
            table-layout: fixed; /* Prevent overflow */
        }

            .table th, .table td {
                padding: 0.75rem; /* Space inside cells */
                vertical-align: top; /* Align text to the top */
                border-top: 1px solid #dee2e6; /* Border at the top of cells */
            }

            .table thead th {
                background-color: #f8f9fa; /* Light background for headers */
                color: #212529; /* Dark text for headers */
                position: sticky;
                top: 0;
                z-index: 10;
            }

            .table tbody tr:nth-child(even) {
                background-color: #f2f2f2; /* Alternating row colors */
            }

            .table tbody tr:hover {
                background-color: #e9ecef; /* Highlight row on hover */
            }

            /* Additional styles for specific columns */
            .table th.fixed-header, .table td.fixed-column {
                position: sticky;
                background-color: #f8f9fa;
                z-index: 2;
            }

        /* Styling for Action buttons */
        .btn-link {
            color: #007bff; /* Blue color for links */
            font-size: 1.25rem; /* Slightly larger font size */
        }

            .btn-link:hover {
                color: #0056b3; /* Darker blue on hover */
                text-decoration: none; /* Remove underline */
            }

            .btn-link i {
                margin-right: 0.5rem; /* Space between icon and text */
            }

        /* Adjusting table container height */
        .table-container {
            max-height: 500px; /* Set a fixed height */
            overflow-y: auto; /* Add vertical scroll if needed */
        }

        @@media (max-width: 768px) {
            .table-responsive td,
            .table-responsive th {
                display: none;
            }

                .table-responsive td:nth-child(1),
                .table-responsive th:nth-child(1),
                .table-responsive td:nth-child(2),
                .table-responsive th:nth-child(2),
                .table-responsive td:nth-child(5),
                .table-responsive th:nth-child(5) {
                    display: table-cell;
                }

                .table-responsive td:nth-child(2),
                .table-responsive th:nth-child(2) {
                    width: 85px;
                    padding: 5px;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                }

                .table-responsive td:nth-child(5),
                .table-responsive th:nth-child(5) {
                    width: 30px;
                }


            .table-responsive {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }


            .page-header {
                text-align: center;
            }

            .breadcrumb {
                display: block;
                text-align: center;
            }

                .breadcrumb a {
                    display: block;
                }
        }
    </style>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#Lsummary thead tr').clone(true).appendTo('#Lsummary thead');
            Grid();
        });

        function Grid() {
            //    $("#Lsummary tr").not(':first').hover(
            //        function () {
            //            $(this).css("background", "#efefef").css("cursor", "Pointer").css("font-weight", "bold").css("box-shadow", "0 4px 2px -3px rgba(0, 0, 0, 0.5) inset").css("-webkit-box-shadow", "0 4px 2px -3px rgba(0, 0, 0, 0.5) inset");
            //        },
            //        function () {
            //            $(this).css("background", "").css("cursor", "").css("font-weight", "").css("box-shadow", "").css("-webkit-box-shadow", "");
            //        }
            //    );

            //    var groupCol = 0;
            //    var table = $('#Lsummary').DataTable({
            //        orderCellsTop: true,
            //        dom: 'Bfrtip',
            //        "buttons": [
            //            'excel'
            //        ],
            //        "stripeClasses": ['odd-row', 'even-row'],
            //        "destroy": true,
            //        "columnDefs": [
            //            //{
            //            //    "searchable": false, "targets": 1,
            //            //    "visible": false
            //            //    , "targets": +groupCol,
            //            //"render": function (data, type, full, meta) {
            //            //    return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
            //            //}
            //            { "visible": true, "targets": groupCol },
            //            { "orderable": true, "targets": [1, 4] },

            //        ],
            //        "order": [[groupCol, 'asc']],
            //        "displayLength": 50,
            //        "drawCallback": function (settings) {
            //            var api = this.api();
            //            var rows = api.rows({ page: 'current' }).nodes();
            //            var last = null;
            //            api.column(groupCol, { page: 'current' }).data().each(function (group, i) {
            //                if (last !== group) {
            //                    $(rows).eq(i).before(
            //                        //'<tr class="group"><td colspan="8"> Location Group : ' + group + '</td> </tr>'
            //                    );
            //                    last = group;
            //                }
            //            });
            //        }
            //    });

            var table1 = $('#Lsummary').DataTable();
            $('#Lsummary thead tr:eq(1) th').each(function (i) {
                var title = $(this).text();
                if (i == 5) {
                    $(this).html('<input type="text" style="width:98%;visibility: hidden;" placeholder="" />');
                }
                else {
                    $(this).html('<input type="text" style="width:98%" placeholder="Search" />');
                }
                $('input', this).on('keyup', function () {
                    if (table1.column(i).search() !== this.value) {
                        table1
                            .column($(this).parent().index() + ':visible')
                            .search(this.value)
                            .draw()
                            ;
                    }
                    else {
                        table1
                            .column($(this).parent().index() + ':visible')
                            .search('')
                            .draw()
                            ;
                    }
                });
            });
        }
    </script>

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            var moveLeft = 10;
            var moveDown = 10;
            $('td.trigger').hover(function (e) {
                $('div#pop-up').show();
            }, function () {
                $('div#pop-up').hide();
            });
            $('td.trigger').mousemove(function (e) {
                $("div#pop-up").css('top', e.pageY + moveDown).css('left', e.pageX + moveLeft);
            });
        });
    </script>
    <script>
        document.getElementById('startDate').addEventListener('change', function () {
            var selectedDate = this.value; // Get the selected date in yyyy-mm-dd format

            // Update hidden input with formatted date
            document.getElementById('hiddenStartDate').value = selectedDate;

            // Log to console to verify
            console.log('Selected Date:', selectedDate);
        });
    </script>
    <script type="text/javascript">
    function handleCheckboxChange() {
        var checkbox = document.getElementById('chkActive');
        var hiddenInput = document.getElementById('hiddenIsActive');
        hiddenInput.value = checkbox.checked ? 'true' : 'false'; // Set hidden input to 'true' or 'false'

        document.forms[0].submit(); // Submit the form when the checkbox is toggled
    }

    // Ensure the checkbox reflects the initial model value
    document.addEventListener('DOMContentLoaded', (event) => {
        var checkbox = document.getElementById('chkActive');
        var isActiveValue = '@Model.isActive'.ToLowerCase();
        checkbox.checked = isActiveValue === 'true'; // Set checkbox state based on model
        checkbox.addEventListener('change', function () {
            document.getElementById('hiddenIsActive').value = checkbox.checked ? '1' : '0';
        });
    });
    </script>
    <script type="text/javascript">
    $(document).ready(function () {
        // Define an array to hold group names from Razor
        var groupNames = @Html.Raw(Json.Serialize(groupNames));

        var groupCol = 0;
        var table = $('#Lsummary').DataTable({
            orderCellsTop: true,
            dom: 'Bfrtip',
            buttons: ['excel'],
            stripeClasses: ['odd-row', 'even-row'],
            destroy: true,
            columnDefs: [
                { orderable: true, targets: [0, 1, 2, 3, 4] },
                { visible: false, targets: [0] }
            ],
            order: [[groupCol, 'asc']],  // Group by the second column
            pageLength: 50,
            lengthChange: true,
            paging: true,
            searching: true,
            info: true,
            drawCallback: function (settings) {
                var api = this.api();
                var rows = api.rows({ page: 'current' }).nodes();
                var last = null;
                $('.group').remove();
                api.column(groupCol, { page: 'current' }).data().each(function (group, i) {
                    if (last !== group) {
                        // Find the group name corresponding to the group value
                        var groupName = groupNames.find(name => name === group) || group;
                        $(rows).eq(i).before(
                            '<tr class="group"><td colspan="5" style="background-color: #D4D4D4; font-weight: bold; color: #777777">Product Group: ' + groupName + '</td></tr>'
                        );
                        last = group;
                    }
                });
            }
        });

        // Search functionality
        $('#Lsummary thead tr:eq(1) th').each(function (i) {
            var title = $(this).text();
            $(this).html('<input type="text" style="width:98%" placeholder="Search" />');
            $('input', this).on('keyup change', function () {
                if (table.column(i).search() !== this.value) {
                    table
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();
                } else {
                    table
                        .column($(this).parent().index() + ':visible')
                        .search('')
                        .draw();
                }
            });
        });
    });
    </script>

    <script type="text/javascript">
    // Pass the server-side data to JavaScript
    var groupNames = @Html.Raw(Json.Serialize(groupNames));
    </script>

    <br />
}


<div class="col-lg-12">
    <div class="panel panel-yellow">
        <div class="panel-heading">Product List</div>
        <div class="panel-body pan">
            <div class="form-body pal">
                <div class="row">
                    <div class="col-lg-12 ">
                        <a asp-page="/Configuration/Product_Master" class="btn btn-primary"><i class="fa fa-plus"></i>&nbsp;New Product</a>
                        @*<a asp-page="" class="btn btn-primary"><i class="fa fa-copy"></i>&nbsp;Copy Product</a>*@
                        @*<a asp-page="" class="btn btn-primary"><i class="fa fa-copy"></i>&nbsp;Change Product Group</a>
                            <a asp-page="" class="btn btn-primary"><i class="fa fa-copy"></i>&nbsp;Change Size </a>
                            <a asp-page="" class="btn btn-primary" onclick="lnk_Import_Click"><i class="fa fa-copy"></i>&nbsp;Import Product</a>*@
                        @*&nbsp;&nbsp;
                            <label>Views:</label>
                            <select id="ddCategory" onchange="this.form.submit()">
                                <option value="0">Basic</option>
                                <option value="1">Price</option>
                                <option value="2">Condiment</option>
                                <option value="3">Barcode</option>
                                <option value="4">Printer</option>
                            </select>*@
                    </div>
                    <div class="row">
                        <form method="post">
                            @*<label class="col-md-6">
                                    &nbsp;&nbsp;&nbsp;&nbsp; Active &nbsp;
                                    <input id="chkActive" name="is_active" type="checkbox" @(Request.Query["is_active"] == "true" ? "checked" : "") onchange="submitForm()" />
                                </label>*@
                            <label class="col-md-6">
                                &nbsp;&nbsp;&nbsp;&nbsp; Active &nbsp;
                                <input id="chkActive" name="isActive" type="checkbox"
                                       @(Model.isActive ? "checked" : "")
                                       onchange="handleCheckboxChange()" />
                            </label>
                            <input type="hidden" id="hiddenIsActive" name="hiddenIsActive" value="@Model.isActive.ToString().ToLower()" />
                        </form>

                        @*<span class="col-md-6">
                                <button id="lnkChangePrice" type="button" class="btn btn-primary" onclick="return true;" asp-page-handler="UpdatePrice" style="display:none;">
                                    <i class="fa fa-copy"></i> Update Price
                                </button>
                            </span>*@
                    </div>
                </div>

                <br />
                <div class="row" id="divPGroup" runat="server">
                    <div class="col-lg-12">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="Lsummary" width="99%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th class="hidden-column" style="display: none;">
                                            Product Group
                                        </th>
                                        <th style="color: #777777;">
                                            Product
                                        </th>
                                        <th style="color: #777777;">
                                            Department
                                        </th>
                                        <th style="color: #777777;">
                                            Base
                                        </th>
                                        <th style="color: #777777;">
                                            Created Datetime
                                        </th>
                                        <th style="color: #777777;">
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @*@{ // Group the items by DepartmentName
                                        var groupedItems = Model.product
                                            .GroupBy(p => p.DepartmentName)
                                            .ToList();

                                        foreach (var group in groupedItems)
                                        {
                                            <tr class="group">
                                                <td colspan="5" style="background-color: #D4D4D4; font-weight: bold;">
                                                    Product Group: @group.Key
                                                </td>
                                            </tr>*@
                                    @foreach (var item in Model.product)
                                    {
                                        <tr>
                                            <td class="hidden-column" style="background-color: #ffffff;">@item.GroupName</td>
                                            <td style="background-color: #ffffff;">
                                                <a asp-page="Product_Master" asp-route-product_id="@item.ProductId" style="color: #777777;">@item.Name</a>
                                            </td>
                                            <td style="background-color: #ffffff;">@item.DepartmentName</td>
                                            <td style="background-color: #ffffff;">@item.baseSize</td>
                                            <td style="background-color: #ffffff;">@item.CreatedDate</td>
                                            <td style="background-color: #ffffff;">
                                                <input type="hidden" id="hfCategory_id" value="@item.ProductId" />
                                                <input type="hidden" id="hdProId" value="@item.ProductId" />
                                                <a asp-page="Product_Master" asp-route-product_id="@item.ProductId" style="color: Gray;"><i class="fa fa-edit fa-lg"></i></a>
                                                &nbsp;&nbsp;
                                                <a asp-page="/Configuration/Product_List"
                                                   onclick="return confirm('Are you sure you want to delete this item?');"
                                                   asp-page-handler="Delete" asp-route-id="@item.ProductId" style="color: Gray;"><i class="fa fa-trash"></i></a>
                                                &nbsp;
                                                @*<button type="button" class="btn btn-link" onclick="checkCondiment()"><i class="fa fa-copy fa-lg"></i></button>*@

                                                <a asp-page="/Configuration/Product_List"
                                                   onclick="return confirm('Are you sure you want to Change Status ?');"
                                                   asp-page-handler="Act" asp-route-id="@item.ProductId" style="color: Gray;"><i class="glyphicon glyphicon-sort"></i></a>


                                                <span hidden>@item.ProductId</span>
                                            </td>
                                        </tr>
                                    }@*}}*@
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th class="hidden-column" style="display: none;">
                                            Product Group
                                        </th>
                                        <th>
                                            Product
                                        </th>
                                        <th>
                                            Department
                                        </th>
                                        <th>
                                            Base
                                        </th>
                                        <th>
                                            Created Datetime
                                        </th>
                                        <th>
                                            Action
                                        </th>
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {

    <style type="text/css">
        tr.group,
        tr.group:hover {
            background-color: #cac9c9 !important;
            color: #ffffff;
            border: #111111 1px solid;
        }

        .row th {
            background-color: #ffffff !important;
        }

        div#pop-up {
            display: none;
            position: fixed;
            width: 280px;
            padding: 10px;
            background: #eeeeee;
            color: #000000;
            border: 1px solid #1a1a1a;
            font-size: 90%;
        }
    </style>


}
